SELECT MAX(VL_TOT_CONSULTA) MAIOR_VALOR_CONSULTA,
       MIN(VL_TOT_CONSULTA) MENOR_VALOR_CONSULTA,
       ROUND(AVG(VL_TOT_CONSULTA), 2) MEDIA_VALOR_CONSULTA,
       COUNT(*)             QTDE_CONSULTA
FROM T_RHSTU_CONSULTA;


--
-- HAVING - Filtro de grupos de linha, geralmentwe vc trabalha sobre as colunas calculadas, agrupamentos.
-- WHERE - Filtro de linha
--
SELECT  E.SG_ESTADO,
        E.NM_ESTADO,
        COUNT(C.ID_CIDADE) QT_CIDADE_CADASTRADA,
        COUNT(L.ID_LOGRADOURO) QT_ENDERECO_CADASTRADO,
        COUNT(P.ID_ENDERECO) QT_ENDERECO_PACIENTE
FROM    T_RHSTU_ESTADO E LEFT JOIN T_RHSTU_CIDADE C
ON     (E.ID_ESTADO = C.ID_ESTADO) LEFT JOIN T_RHSTU_BAIRRO B
ON     (C.ID_CIDADE = B.ID_CIDADE) LEFT JOIN T_RHSTU_LOGRADOURO L
ON     (B.ID_BAIRRO = L.ID_BAIRRO) LEFT JOIN T_RHSTU_ENDERECO_PACIENTE P
ON     (L.ID_LOGRADOURO = P.ID_LOGRADOURO)
GROUP BY E.SG_ESTADO,
        E.NM_ESTADO
-- HAVING COUNT(C.ID_CIDADE) < 5
ORDER BY 5 DESC;


--
-- Consultar a partir do dia, mes, nome paciente, email...
-- Setando data em português também
--
ALTER SESSION SET NLS_DATE_FORMAT = 'DD/MM/YYYY';

SELECT P.NM_PACIENTE,
       P.DT_NASCIMENTO,
       TO_CHAR(P.DT_NASCIMENTO, 'MONTH') MES,
       TO_CHAR(P.DT_NASCIMENTO, 'DD') DIA,
       P.NM_PACIENTE,
       P.DT_NASCIMENTO,
       E.DS_EMAIL,
       E.TP_EMAIL
FROM   T_RHSTU_PACIENTE P,
       T_RHSTU_EMAIL_PACIENTE E
WHERE  P.ID_PACIENTE = E.ID_PACIENTE(+)
ORDER BY 1,2;

--
-- O que faz essa consulta?
--
SELECT TO_CHAR(P.DT_NASCIMENTO, 'MONTH') MES,
       TO_CHAR(P.DT_NASCIMENTO, 'DD') DIA,
       COUNT(*)
FROM  T_RHSTU_PACIENTE P
GROUP BY TO_CHAR(P.DT_NASCIMENTO, 'MONTH'),
         TO_CHAR(P.DT_NASCIMENTO, 'DD'),
         TO_CHAR(P.DT_NASCIMENTO, 'MM')
HAVING COUNT(*) > 10
ORDER BY 3,2;


--
--
--

